{"version":3,"sources":["../src/normalizeInput.js"],"names":["emojiRegex","input","replace","trim","toLowerCase"],"mappings":";;;;;;;AAEA;;;;AAEA,MAAMA,UAAU,GAAG,0BAAnB;;eAEgBC,KAAD,IAA2B;AACxC,SAAOA,KAAK,CACTC,OADI,CACIF,UADJ,EACgB,GADhB,EAEJE,OAFI,CAEI,qDAFJ,EAE2D,IAF3D,EAGJA,OAHI,CAGI,WAHJ,EAGiB,GAHjB,EAIJA,OAJI,CAII,YAJJ,EAIkB,GAJlB,EAKJA,OALI,CAKI,aALJ,EAKmB,GALnB,EAMJA,OANI,CAMI,cANJ,EAMoB,GANpB,EAOJA,OAPI,CAOI,eAPJ,EAOqB,GAPrB,EAQJA,OARI,CAQI,gBARJ,EAQsB,GARtB,EASJA,OATI,CASI,eATJ,EASqB,GATrB,EAUJA,OAVI,CAUI,gBAVJ,EAUsB,GAVtB,EAYL;AAZK,GAaJA,OAbI,CAaI,SAbJ,EAae,GAbf,EAcJC,IAdI,GAeJC,WAfI,EAAP;AAgBD,C","sourcesContent":["// @flow\n\nimport createEmojiRegex from 'emoji-regex';\n\nconst emojiRegex = createEmojiRegex();\n\nexport default (input: string): string => {\n  return input\n    .replace(emojiRegex, ' ')\n    .replace(/(?<=\\s|^)([a-z0-9.-_@])\\s?(?=[a-z0-9.-_@](?:\\s|$))/g, '$1')\n    .replace(/\\s+at\\s+/g, '@')\n    .replace(/\\s+dot\\s+/g, '.')\n    .replace(/\\s*<at>\\s*/g, '@')\n    .replace(/\\s*<dot>\\s*/g, '.')\n    .replace(/\\s*\\(at\\)\\s*/g, '@')\n    .replace(/\\s*\\(dot\\)\\s*/g, '.')\n    .replace(/\\s*\\[at\\]\\s*/g, '@')\n    .replace(/\\s*\\[dot\\]\\s*/g, '.')\n\n    // Matches all ASCII characters from the space to tilde.\n    .replace(/[^ -~]/g, ' ')\n    .trim()\n    .toLowerCase();\n};\n"],"file":"normalizeInput.js"}